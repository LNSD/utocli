name: ci
on:
  pull_request:
  merge_group:
  push:
    branches:
    - "main"
    - "renovate/lock-file-maintenance"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  format:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c # v1
        with:
          toolchain: nightly
          components: rustfmt
          cache: false
          rustflags: ''

      - name: Install just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - run: just fmt-check

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      ## Setup
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c # v1
        with:
          components: clippy,llvm-tools
          cache: true
          rustflags: ''

      - name: Install just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Install Cargo LLVM cov
        uses: baptiste0928/cargo-install@b687c656bda5733207e629b50a22bf68974a0305 # v3
        with:
          crate: cargo-llvm-cov

      - name: Install cargo-nextest
        uses: baptiste0928/cargo-install@b687c656bda5733207e629b50a22bf68974a0305 # v3
        with:
          crate: cargo-nextest
          version: ^0.9

      ## Linting
      - run: just clippy

      ## Tests
      - name: Unit tests
        run: just test-unit-cov

      - name: Doc tests
        # TODO: Collect doc tests coverage once nextest supports it
        # https://nexte.st/docs/integrations/test-coverage/?h=doc#collecting-coverage-data-from-doctests
        run: just test-doc

      - name: Integration tests (in-tree)
        run: just test-it-intree-cov

      - name: Integration tests (public API)
        run: just test-it-public-cov

      - name: E2E tests
        run: just test-e2e-cov

      - name: Upload unit tests coverage report to codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: target/lcov/unit-lcov.info
          flags: unit

      - name: Upload integration tests (in-tree) coverage report to codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: target/lcov/it-intree-lcov.info
          flags: integration-intree

      - name: Upload integration tests (public API) coverage report to codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: target/lcov/it-public-lcov.info
          flags: integration-public

      - name: Upload E2E tests coverage report to codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: target/lcov/e2e-lcov.info
          flags: e2e

  # Check generated code is up to date
  gen-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c # v1
        with:
          cache: true
          rustflags: ''

      - name: Install just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - run: just gen

      - name: Check for uncommitted changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            printf "‚ùå Generated code is out of date. Please run 'just gen' and commit the changes.\n"

            printf "\nüìÑ Files with changes:\n"
            git status --porcelain

            printf "\nüîç Detailed diff:\n"
            git diff --color=always

            exit 1
          else
            printf "‚úÖ Generated code is up to date.\n"
          fi
